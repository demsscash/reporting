name: Build BANKILY Windows Executables FIXED

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows-exe:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies with fixed versions
      run: |
        python -m pip install --upgrade pip
        pip install pandas==2.1.4 openpyxl==3.1.2 xlrd==2.0.1 reportlab==4.0.8 tkcalendar==1.6.1
        pip install pyinstaller==6.3.0
        
    - name: Test imports before build
      run: |
        python -c "import pandas; print('pandas OK')"
        python -c "import openpyxl; print('openpyxl OK')" 
        python -c "import xlrd; print('xlrd OK')"
        python -c "import reportlab; print('reportlab OK')"
        python -c "import tkcalendar; print('tkcalendar OK')"
        
    - name: Create assets directory if missing
      run: |
        if (-not (Test-Path "assets")) {
          New-Item -ItemType Directory -Name "assets"
          Write-Host "Assets directory created"
        } else {
          Write-Host "Assets directory already exists"
        }
      shell: powershell
        
    - name: Build Hub executable
      run: |
        Write-Host "Building BANKILY Generator Hub..."
        pyinstaller bankily_hub.spec --clean --noconfirm
      shell: powershell
        
    - name: Build Centres executable
      run: |
        Write-Host "Building Multi-Centres..."
        pyinstaller centres.spec --clean --noconfirm
      shell: powershell
        
    - name: Build Commercants executable
      run: |
        Write-Host "Building Multi-Commercants..."
        pyinstaller commercants.spec --clean --noconfirm
      shell: powershell
        
    - name: Build Agents executable
      run: |
        Write-Host "Building Multi-Agents..."
        pyinstaller agents.spec --clean --noconfirm
      shell: powershell
    
    - name: Verify build results
      run: |
        Write-Host "=== Checking build results ==="
        if (Test-Path "dist") {
          Get-ChildItem dist -Recurse | ForEach-Object {
            if ($_.Extension -eq ".exe") {
              $size = [math]::Round($_.Length / 1MB, 2)
              Write-Host "$($_.Name) - $size MB"
            }
          }
        } else {
          Write-Host "No dist folder found"
          exit 1
        }
      shell: powershell
    
    - name: Create release package
      run: |
        Write-Host "Creating release package..."
        New-Item -ItemType Directory -Name "release_package" -Force
        
        if (Test-Path "dist") {
          Copy-Item "dist\*.exe" "release_package\" -ErrorAction SilentlyContinue
          Write-Host "Executables copied"
        }
        
        if (Test-Path "assets") {
          Copy-Item "assets" "release_package\assets" -Recurse -ErrorAction SilentlyContinue
          Write-Host "Assets copied"
        }
        
        Write-Host "Package created"
      shell: powershell
    
    - name: Create documentation files
      run: |
        # Create README
        echo "BANKILY Generator Package - Windows Executables" > release_package/README.txt
        echo "===============================================" >> release_package/README.txt
        echo "" >> release_package/README.txt
        echo "CONTENU DU PACKAGE:" >> release_package/README.txt
        echo "- BANKILY_Generator_Hub.exe (Application principale)" >> release_package/README.txt
        echo "- BANKILY_Multi_Centres.exe" >> release_package/README.txt
        echo "- BANKILY_Multi_Commercants.exe" >> release_package/README.txt
        echo "- BANKILY_Multi_Agents.exe" >> release_package/README.txt
        echo "" >> release_package/README.txt
        echo "UTILISATION:" >> release_package/README.txt
        echo "1. Extrayez TOUS les fichiers dans le meme dossier" >> release_package/README.txt
        echo "2. Lancez BANKILY_Generator_Hub.exe" >> release_package/README.txt
        echo "3. Choisissez votre type de generateur" >> release_package/README.txt
        echo "" >> release_package/README.txt
        echo "IMPORTANT:" >> release_package/README.txt
        echo "- TOUS les fichiers .exe doivent etre dans le meme dossier" >> release_package/README.txt
        echo "- Si erreur dependances, redemarrez Windows" >> release_package/README.txt
        echo "- Ajoutez une exception antivirus si necessaire" >> release_package/README.txt
        echo "" >> release_package/README.txt
        echo "Developpe pour BANKILY - 2025" >> release_package/README.txt
        
        # Create launch script
        echo "@echo off" > release_package/LANCER_BANKILY.bat
        echo "echo BANKILY Generator Hub - Script de lancement" >> release_package/LANCER_BANKILY.bat
        echo "echo." >> release_package/LANCER_BANKILY.bat
        echo "if not exist \"BANKILY_Generator_Hub.exe\" (" >> release_package/LANCER_BANKILY.bat
        echo "    echo ERREUR: BANKILY_Generator_Hub.exe non trouve" >> release_package/LANCER_BANKILY.bat
        echo "    pause" >> release_package/LANCER_BANKILY.bat
        echo "    exit /b 1" >> release_package/LANCER_BANKILY.bat
        echo ")" >> release_package/LANCER_BANKILY.bat
        echo "echo Lancement du Hub..." >> release_package/LANCER_BANKILY.bat
        echo "start \"\" \"BANKILY_Generator_Hub.exe\"" >> release_package/LANCER_BANKILY.bat
        echo "echo Hub lance!" >> release_package/LANCER_BANKILY.bat
        echo "timeout /t 3 /nobreak >nul" >> release_package/LANCER_BANKILY.bat
        
        echo "Documentation files created"
      shell: bash
    
    - name: Upload executables
      uses: actions/upload-artifact@v4
      with:
        name: BANKILY-Windows-Executables-FIXED-${{ github.sha }}
        path: release_package/
        retention-days: 60
        if-no-files-found: error
    
    - name: Build summary
      shell: bash
      run: |
        echo "## BANKILY Build Summary - FIXED VERSION" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Build completed successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### CORRECTIONS APPLIQUEES:" >> $GITHUB_STEP_SUMMARY
        echo "- Hub PyInstaller nettoyage environnement subprocess" >> $GITHUB_STEP_SUMMARY
        echo "- Variables PYINSTALLER_RESET_ENVIRONMENT" >> $GITHUB_STEP_SUMMARY
        echo "- Isolation processus CREATE_NEW_PROCESS_GROUP" >> $GITHUB_STEP_SUMMARY
        echo "- Spec files optimises et exclusions Hub" >> $GITHUB_STEP_SUMMARY
        echo "- Documentation et scripts de depannage" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Fichiers generes:" >> $GITHUB_STEP_SUMMARY
        echo "- BANKILY_Generator_Hub.exe (Menu principal)" >> $GITHUB_STEP_SUMMARY
        echo "- BANKILY_Multi_Centres.exe" >> $GITHUB_STEP_SUMMARY
        echo "- BANKILY_Multi_Commercants.exe" >> $GITHUB_STEP_SUMMARY
        echo "- BANKILY_Multi_Agents.exe" >> $GITHUB_STEP_SUMMARY
        echo "- README.txt + LANCER_BANKILY.bat" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Instructions de telechargement:" >> $GITHUB_STEP_SUMMARY
        echo "1. Cliquez sur l'onglet Actions de ce repository" >> $GITHUB_STEP_SUMMARY
        echo "2. Selectionnez ce build (avec coche verte)" >> $GITHUB_STEP_SUMMARY
        echo "3. Telechargez: BANKILY-Windows-Executables-FIXED-${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "4. Extrayez TOUS les fichiers dans le MEME dossier" >> $GITHUB_STEP_SUMMARY
        echo "5. Lancez BANKILY_Generator_Hub.exe" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### PROBLEME RESOLU:" >> $GITHUB_STEP_SUMMARY
        echo "Cette version corrige les erreurs de dependances manquantes" >> $GITHUB_STEP_SUMMARY
        echo "lors du lancement des generateurs depuis le Hub principal." >> $GITHUB_STEP_SUMMARY